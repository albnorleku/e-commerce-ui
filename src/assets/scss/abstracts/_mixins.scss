// Mixins
//todo: improve on event mixin
@mixin on-event($self: false) {
    @if $self {
        &,
        &:hover,
        &:active,
        &:focus {
            @content;
        }
    } @else {
        &:hover {
            @content;
        }
    }
}

// .sample {
//   @include on-event($self:true or false) {
//      text-decoration: underline;
//   }
// }


// Responsive manager
// @param {String} $breakpoint - Breakpoint
// @requires $breakpoints
// @link http://sass-guidelin.es/#breakpoint-manager Sass Guidelines - Breakpoint Manager
@mixin breakpoint($breakpoint) {
    $query: map-get($breakpoints, $breakpoint);

    @if not $query {
        @error 'No value found for #{$breakpoint}. Please make sure it is defined in $breakpoints map.';
    }

    @media #{if(type-of($query) == 'string', unquote($query), inspect($query))} {
        @content;
    }
}

// Transition Mixin
@mixin transition($args...) {
    transition: $args;
}

// USAGE, Example
// .sample {
//   @include transition(all 0.6s ease-in-out);
// }


// Positioning Mixin
@mixin position($position: static, $top: auto, $right: auto, $bottom: auto, $left: auto) {
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

// USAGE, Example
// .sample {
//     @include position(absolute, 10px, 10px, 5px, 15px);
//   }

// Button Common Styles
@mixin button ($bg-color, $color) {
    background-color: color($bg-color) !important; // todo: remove important after we are done with themes folder.
    color: color($color) !important; // todo: remove important after we are done with themes folder.

    @include on-event($self: false) {
        box-shadow: $button-box-shadow;
        background-color: color($bg-color);
        outline: none;
    }

    &:focus {
        box-shadow: none;
        outline: none;
    }
}
